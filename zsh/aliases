# convenient cd
# -------------
chpwd() { ls }              # ls when cd

kak() { /home/nillesa2/src/kakoune/src/kak "$@" ;}

# longer tail/head
# ----------------
alias tail='tail -n30'
alias head='head -n30'

# compression
# -----------
alias tarx='tar -xvf'
tarc() { tar -zcvf $1.tar.gz $1 }
zipd() { zip -rv $1.zip $1 }
alias unrar='unrar e'


# simple web server
# -----------------
http() {
    python -m http.server $@
}


# Shortcuts
# =========

function pdf() {
    okular "$1" &
}


# printing
# --------
p() {
    copies='1' \
        && echo "$1" | grep '^[0-9]*$' &>/dev/null && copies="$1" \
        && shift
    sides='-o sides=two-sided-long-edge' \
        && [[ "$1" == 'onesided' ]] && sides='-o sides=one-sided' \
        && shift
    pages='' \
        && [[ "$1" == 'pages'    ]] && pages='-o page-ranges='"$2" \
        && shift && shift

    file="$1" && [[ ! -f "$file" ]] && echo "No file '$file'" && return 1
    shift

    lpr '-#'$copies $sides $pages $@ "$file"
}


# markdown publishing
md() {
    format="$1"
    md_doc="$2"
    template="default"

    case "$format" in
        markdown)   ext='md'                    ;;
        latex)      ext='pdf'                   ;;
        my-latex)   ext='pdf'; format='latex';
                    template="my_template.tex"  ;;
        latex-raw)  ext='tex'; format='latex'   ;;
        beamer)     ext='pdf'                   ;;
        beamer-raw) ext='tex'; format='beamer'  ;;
        html)       ext='html'     ;;
        *)          ext="$format" ;;
    esac

    pandoc --standalone --filter=pandoc-citeproc \
           --from=markdown --to="$format" --template="$template" \
           --output="${md_doc%.*}.$ext" "$md_doc" \
           || echo "pandoc error ..." >&2
}

mkpdf() {
    doc="$1"
    bibtex "${doc%.*}"
    pdflatex "$doc"
    pdflatex "$doc"
    rm *.log *.out *.bbl *blg
}

# ROS utils
# ---------

ros() {
  source /opt/ros/kinetic/setup.zsh
  export PYTHONPATH=/opt/ros/kinetic/lib/python2.7/site-packages:$PYTHONPATH
  export PKG_CONFIG_PATH="/opt/ros/kinetic/lib/pkgconfig:$PKG_CONFIG_PATH"

  # Useful aliases
  alias catkin_make="catkin_make -DPYTHON_EXECUTABLE=/usr/bin/python2 -DPYTHON_INCLUDE_DIR=/usr/include/python2.7 -DPYTHON_LIBRARY=/usr/lib/libpython2.7.so"

  typeset -T ROS_PACKAGE_PATH ros_package_path
  ros_package_path=(/home/alli/catkin_ws $ros_package_path)
  export ROS_PACKAGE_PATH
  export ros_package_path
  typeset -U ROS_PACKAGE_PATH ros_package_path

  fix_ros_ip

  # If you use Gazebo:
  #source /usr/share/gazebo/setup.sh
}

# replace "localhost" in URI so ghc can resolve it?
fix_ros_ip() {
    if [[ "${ROS_MASTER_URI#*localhost}" != "$ROS_MASTER_URI" ]]; then
        uri="${ROS_MASTER_URI##*localhost:}"
        export ROS_MASTER_URI="http://127.0.0.1:"$uri
    fi
    export ROS_IP=127.0.0.1
    export ROS_HOSTNAME=127.0.0.1
}

# backup
# ------
backup() {
    dest="$1"
    [[ ! -d "$dest" ]] && return 1
    rsync --progress --partial --archive --verbose --update --recursive --relative \
        bin dotfiles common projects Zotero "$dest"
}

publishslides() {
    dest="$1"
    [[ ! -d "$dest" ]] && return 1
    rsync --progress --partial --archive --verbose --ignore-existing --delete \
        css figs header.txt ieee.csl Makefile my.reveal talk.html talk.md thesisrefs.bib "$dest"
}

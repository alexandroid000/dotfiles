" set environment
set shell=zsh

set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin("~/.vim/bundle/Vundle.vim")
"" alternatively, pass a path where Vundle should install plugins
""call vundle#begin('~/some/path/here')
"
"" Plugins
""Plugin 'FredKSchott/CoVim'
"
"" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

Plugin 'tpope/vim-markdown'

"
"
"" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
"" To ignore plugin indent changes, instead use:
"filetype plugin on
""
"" Brief help
"" :PluginList       - lists configured plugins
"" :PluginInstall    - installs plugins; append `!` to update or just
":PluginUpdate
"" :PluginSearch foo - searches for foo; append `!` to refresh local cache
"" :PluginClean      - confirms removal of unused plugins; append `!` to
"auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

syntax on
colorscheme koehler

"Latex files, @w compiles, @o opens
autocmd BufRead,BufNewFile *.tex,*.md,*.lhs let @p=':w:!build_pdf %'
autocmd BufRead,BufNewFile *.tex let @o=':w:!pdf %:r.pdf & '

"markdown spellcheck on
"autocmd BufNewFile,BufRead *.md,*.mkd,*.markdown set spell spelllang=en_us
"
let @v='F lvf h'

let mapleader = ","
"compiling documents
map <leader>w :wa<cr>:!md make doc %<cr><cr>
map <leader>e :w<cr>:!md make exec %<cr><cr>
map <leader>o :!pdf %:r.pdf<cr><cr>

map <leader>d :r!date "+\%Y-\%m-\%d \%T"<cr>,h2<cr>

"markdown headers
map <leader>h1 VypVr=o
map <leader>h2 VypVr-o
map <leader>h3 I### o
map <leader>cb I```VypkA

"Tab Behavior
set shiftwidth=4
set tabstop=4
set expandtab
set softtabstop=4
set autoindent
set smartindent
set smarttab


"" markdown syntax higlighting
let g:markdown_fenced_languages = ['c', 'sh', 'bash=sh', 'python', 'ruby',
    \ 'haskell', 'tex']

"" highlight the current line lightly
highlight cursorline cterm=bold ctermbg=235
noremap <leader>cl :set cursorline!<cr>
set cursorline

"" highlight EOL spaces
set list listchars=tab:\ \ ,trail:_,extends:Â»,precedes:Â«
map <leader>lc :set list!<cr>

"Scroll Behavior - set so line being edited is always in middle of screen
set scrolloff=10
" Buffer movement
" ---------------
nnoremap > :bn<cr>
nnoremap < :bp<cr>
set hidden
set nostartofline

"set line width
set textwidth=80
set formatoptions+=t

"Fold Behavior
"" highlight folds lightly, fold on syntax, only nest 2 folds deep
highlight folded ctermbg=233
"set foldmethod=manual
set foldmethod=syntax
set foldnestmax=2

"Command Completion
set wildmode=list:longest
set wildmenu

"Persistant undos
set undodir=/home/alli/.vim/undo
set undofile
set undolevels=1000
set undoreload=10000


"Turn on numbers
"set number

"Make it so that I can see when I'm over 80 characters in a line
highlight overlength ctermbg=234
match overlength /\%81v.\+/

"Incremental search - search as you type
set incsearch

"Toggle spellcheck on and off
map <leader>ss :setlocal spell!<cr>
" dumb vim+markdown
" -----------------
autocmd FileType markdown |
    \hi def link markdownItalic              none |
    \hi def link markdownItalicDelimiter     none |
    \hi def link markdownBold                none |
    \hi def link markdownBoldDelimiter       none |
    \hi def link markdownBoldItalic          none |
    \hi def link markdownBoldItalicDelimiter none |
    \set spell

"Set to autoread outside changes to files
set autoread

"Makefiles need tabs, not spaces!
autocmd filetype make setlocal noexpandtab

"c/cpp/h/hpp files, @w makes, @o runs (not implemented yet)
autocmd BufRead,BufNewFile *.c,*.cpp,*.h,*.hpp,*.hs,*.ino let @w=':w:!make; read \?'
